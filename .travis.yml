dist: trusty
sudo: required
language: bash

jobs:
  include:
    - name: OTUS default tests
      before_install:
        - curl https://raw.githubusercontent.com/express42/otus-homeworks/2019-08/run.sh | bash

    - name: This should run only for master branch
      install:
        # Prepare bin directory
        - mkdir -p ${HOME}/bin ; export PATH=${PATH}:${HOME}/bin
        # Install terraform
        - curl --silent --output terraform.zip https://releases.hashicorp.com/terraform/0.12.8/terraform_0.12.8_linux_amd64.zip
        - unzip terraform.zip -d ${HOME}/bin
        - chmod +x ${HOME}/bin/terraform
        # Install tflint
        - curl --silent -L --output tflint.zip https://github.com/terraform-linters/tflint/releases/download/v0.12.1/tflint_linux_amd64.zip
        - unzip tflint.zip -d ${HOME}/bin
        - chmod +x ${HOME}/bin/tflint
        # Install ansible and ansible-lint
        - pip install --user ansible
        - pip install --user ansible-lint
      before_script:
        - packer --version
        - terraform --version
        - tflint --version
        - ansible --version
        - ansible-lint --version
      script:
        # Packer tests
        - packer validate -var-file=packer/variables.json.example packer/app.json
        - packer validate -var-file=packer/variables.json.example packer/db.json
        # Terraform tests
        - cd ${TRAVIS_BUILD_DIR}/terraform/stage ; terraform init -backend=false ; terraform validate
        - cd ${TRAVIS_BUILD_DIR}/terraform/prod  ; terraform init -backend=false ; terraform validate
        # Tflint tests
        - tflint ${TRAVIS_BUILD_DIR}/terraform/stage
        - tflint ${TRAVIS_BUILD_DIR}/terraform/prod
        # Ansible-lint tests
        - cd ${TRAVIS_BUILD_DIR}/ansible/playbooks ; ansible-lint *

      if: branch = master

notifications:
  slack:
    rooms:
      secure: j4hR+DX/e4K/8UNZbfk6/ZXyw7nPKt9kZfUfnT0fySrp85oxnyklVfPv/bj1ZTmtPJuFLnGF2k5xB9rChE/NYV6O0SbOeGckwh48b22E4PJDeV1Ur5vgUeYfJ77jD4jT17IUQYX+TDw6q6+C8IqtfjBRSOgCfYAIyS3QBGWT0FO84LXeZLYrl4aXAis2r6bkqREe4BuvYFOupzGZmadjL3xazczDyRpVWFsNybuW1ns5YJGUV5nitjqgnJlHwNDoOTkuQmkv3OgESlGOb0OtXUX0GZkz5P/5j/R5gX6cpzslom0JhHSdyWKZPYu+b7jKD4ZAmkXbZpboYyEC6UtED95UhSdvJIFVEpBWD2YUC1sb+KBqchDNGVPEqQM9IHOutuJt2QNA7F+C0DkWJLTLmUgvhw5M6uWrbqHH9vFPxHbT1Mb2fqKVPZQWY4TcODj2x21dXkA6rCu366bF3tuctsZ8TqehLJ24d7WrzgWAdI2EZP2UGUTHM50k1beMO9HVuwsbCeVTWGQKtQto1RMf3GkuLRjb/y/Vy7Sxs4QypxxVT5LjHhmUWl5P4tZVwPCIq+h66glTAd+gjbTGDh2XjkvG3MRLWMWvPt5pmVC8Eu+LTa/OB6p7QH4K36i/1pkgeJPz0ic8EAaEjNT0BZcvGDpuq/DkyIL1yBrapKTB0tQ=
